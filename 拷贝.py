'''
浅拷贝 只拷贝父对象，不会拷贝对象的内部的子对象。
深拷贝 拷贝对象及其子对象

1.Python中对象的赋值都是进行对象引用（内存地址）传递
2.使用copy.copy()，可以进行对象的浅拷贝，它复制了对象，但对于对象中
的元素，依然使用原始的引用.
3.如果需要复制一个容器对象，以及它里面的所有元
素（包含元素的子元素），可以使用copy.deepcopy()进行深拷贝
4.对于非容器类型（如数字、字符串、和其他'原子'类型的对象）没有被拷贝一说
5.如果元祖变量只包含原子类型对象，则不能深拷贝，看下面的例子
'''

import copy
a = [1, 2, 3, 4, ['a', 'b']]  #原始对象

b = a  #赋值，传对象的引用
c = copy.copy(a)  #对象拷贝，浅拷贝
d = copy.deepcopy(a)  #对象拷贝，深拷贝

a.append(5)  #修改对象a
a[4].append('c')  #修改对象a中的['a', 'b']数组对象

print ('a = ', a) # a =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]
print ('b = ', b) # b =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]
print ('c = ', c) # c =  [1, 2, 3, 4, ['a', 'b', 'c']]
print ('d = ', d) # d =  [1, 2, 3, 4, ['a', 'b']]

